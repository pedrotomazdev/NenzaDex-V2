<<<<<<< HEAD
// ======= BASE CLASSES =======

// POISTION
.p-relative {
    position: relative;
}

.p-absolute {
    position: absolute;
}

.p-fixed {
    position: fixed;
}

.p-sticky {
    position: sticky;
    top: 0;
}

.p-static {
    position: static;
}

.p-inherit {
    position: inherit;
}

.p-initial {
    position: initial;
}

.absolute-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// OVERFLOW
.overflow-auto {
    overflow: auto;
}

.overflow-hidden {
    overflow: hidden;
}

.overflow-visible {
    overflow: visible;
}

.overflow-scroll {
    overflow: scroll;
}

// DISPLAY
.d-flex {
    display: flex;
}

.d-inline-flex {
    display: inline-flex;
}

.d-block {
    display: block;
}

.d-inline {
    display: inline;
}

.d-none {
    display: none !important;
}

// FLEX
.flex-row {
    flex-direction: row;
}

.flex-column {
    flex-direction: column;
}

.flex-wrap {
    flex-wrap: wrap;
}

.justify-start {
    justify-content: flex-start;
}

.justify-center {
    justify-content: center;
}

.justify-end {
    justify-content: flex-end;
}

.justify-between {
    justify-content: space-between;
}

.justify-around {
    justify-content: space-around;
}

.align-start {
    align-items: flex-start;
}

.align-center {
    align-items: center;
}

.align-end {
    align-items: flex-end;
}

.align-stretch {
    align-items: stretch;
}

.text-left {
    text-align: left;
}

.text-center {
    text-align: center;
}

.text-right {
    text-align: right;
}


@each $key, $val in $space-values {
    .m-#{$key} {
        margin: $val;
    }

    .gap-#{$key} {
        gap: $val;
    }

    .p-#{$key} {
        padding: $val;
    }

    .mt-#{$key} {
        margin-top: $val;
    }

    .mr-#{$key} {
        margin-right: $val;
    }

    .mb-#{$key} {
        margin-bottom: $val;
    }

    .ml-#{$key} {
        margin-left: $val;
    }

    .pt-#{$key} {
        padding-top: $val;
    }

    .pr-#{$key} {
        padding-right: $val;
    }

    .pb-#{$key} {
        padding-bottom: $val;
    }

    .pl-#{$key} {
        padding-left: $val;
    }

    .mx-#{$key} {
        margin-left: $val;
        margin-right: $val;
    }

    .my-#{$key} {
        margin-top: $val;
        margin-bottom: $val;
    }

    .px-#{$key} {
        padding-left: $val;
        padding-right: $val;
    }

    .py-#{$key} {
        padding-top: $val;
        padding-bottom: $val;
    }
}

// ======= UTILITY CLASSES =======
.container {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    padding-left: 1rem;
    padding-right: 1rem;

    @media (max-width: 992px) {
        max-width: calc(100% - 10px);
        padding-left: 5px;
        padding-right: 5px;
    }

    @media (min-width: 993px) {
        max-width: calc(100% - 10px);
        padding-left: 5px;
        padding-right: 5px;
    }

    @media (min-width: 1200px) {
        max-width: 1140px;
    }

    @media (min-width: 1400px) {
        max-width: 1320px;
    }
}


// ======= REMOVE CSS IMBUTIDO =======
ul {
    padding-left: 0;
    list-style: none;
}

// Geral
* {
    box-sizing: border-box;
    outline: none;
    
}

a,
a:hover,
a:focus {
    text-decoration: none;
}


// ======= RESPONSIVO =======

// Gera classes como .md\:d-flex, .lg\:justify-center, etc.
@mixin responsive-utility($class, $property, $value) {
    @each $break, $width in $breakpoints {
        @media (min-width: $width) {
            .#{$break}\:#{$class} {
                #{$property}: #{$value};
            }
        }
    }
=======
// ======= BASE CLASSES =======

// POISTION
.p-relative {
    position: relative;
}

.p-absolute {
    position: absolute;
}

.p-fixed {
    position: fixed;
}

.p-sticky {
    position: sticky;
    top: 0;
}

.p-static {
    position: static;
}

.p-inherit {
    position: inherit;
}

.p-initial {
    position: initial;
}

.absolute-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// OVERFLOW
.overflow-auto {
    overflow: auto;
}

.overflow-hidden {
    overflow: hidden;
}

.overflow-visible {
    overflow: visible;
}

.overflow-scroll {
    overflow: scroll;
}

// DISPLAY
.d-flex {
    display: flex;
}

.d-inline-flex {
    display: inline-flex;
}

.d-block {
    display: block;
}

.d-inline {
    display: inline;
}

.d-none {
    display: none !important;
}

// FLEX
.flex-row {
    flex-direction: row;
}

.flex-column {
    flex-direction: column;
}

.flex-wrap {
    flex-wrap: wrap;
}

.justify-start {
    justify-content: flex-start;
}

.justify-center {
    justify-content: center;
}

.justify-end {
    justify-content: flex-end;
}

.justify-between {
    justify-content: space-between;
}

.justify-around {
    justify-content: space-around;
}

.align-start {
    align-items: flex-start;
}

.align-center {
    align-items: center;
}

.align-end {
    align-items: flex-end;
}

.align-stretch {
    align-items: stretch;
}

.text-left {
    text-align: left;
}

.text-center {
    text-align: center;
}

.text-right {
    text-align: right;
}


@each $key, $val in $space-values {
    .m-#{$key} {
        margin: $val;
    }

    .gap-#{$key} {
        gap: $val;
    }

    .p-#{$key} {
        padding: $val;
    }

    .mt-#{$key} {
        margin-top: $val;
    }

    .mr-#{$key} {
        margin-right: $val;
    }

    .mb-#{$key} {
        margin-bottom: $val;
    }

    .ml-#{$key} {
        margin-left: $val;
    }

    .pt-#{$key} {
        padding-top: $val;
    }

    .pr-#{$key} {
        padding-right: $val;
    }

    .pb-#{$key} {
        padding-bottom: $val;
    }

    .pl-#{$key} {
        padding-left: $val;
    }

    .mx-#{$key} {
        margin-left: $val;
        margin-right: $val;
    }

    .my-#{$key} {
        margin-top: $val;
        margin-bottom: $val;
    }

    .px-#{$key} {
        padding-left: $val;
        padding-right: $val;
    }

    .py-#{$key} {
        padding-top: $val;
        padding-bottom: $val;
    }
}

// ======= UTILITY CLASSES =======
.container {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    padding-left: 1rem;
    padding-right: 1rem;

    @media (max-width: 992px) {
        max-width: calc(100% - 10px);
        padding-left: 5px;
        padding-right: 5px;
    }

    @media (min-width: 993px) {
        max-width: calc(100% - 10px);
        padding-left: 5px;
        padding-right: 5px;
    }

    @media (min-width: 1200px) {
        max-width: 1140px;
    }

    @media (min-width: 1400px) {
        max-width: 1320px;
    }
}


// ======= REMOVE CSS IMBUTIDO =======
ul {
    padding-left: 0;
    list-style: none;
}

// Geral
* {
    box-sizing: border-box;
    outline: none;
    
}

a,
a:hover,
a:focus {
    text-decoration: none;
}


// ======= RESPONSIVO =======

// Gera classes como .md\:d-flex, .lg\:justify-center, etc.
@mixin responsive-utility($class, $property, $value) {
    @each $break, $width in $breakpoints {
        @media (min-width: $width) {
            .#{$break}\:#{$class} {
                #{$property}: #{$value};
            }
        }
    }
>>>>>>> 19bc759f0aa87b02512c83d52f7dcac3ebaeb348
}